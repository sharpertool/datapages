machine:
  timezone:
    America/Denver

  python:
    version: 3.5.2

  hosts:
    synopticone.local: 127.0.0.1

  environment:
    # ToDo Update the database urls
    DATABASE_URL: postgres://postgres@127.0.0.1:5432/datasheetai
    DJANGO_SETTINGS_MODULE: datasheet_ai.settings.test
    DATABASE_URL: postgresql://ubuntu@localhost/circle_test
    # ToDo: Update this security group for datasheet.ai
    BIGZETA_CIRCLECI_SG: sg-8e3fa8f6

  services:
    - redis
    - elasticsearch

#checkout:
# If we wanted to use submodules, we can include this code.
#  post:
#    - git submodule update --init
#    - git submodule sync

dependencies:
  pre:
    - pip install -r requirements/local.txt
    - pip install -r requirements/test.txt

test:
  pre:
    - mkdir -p $CIRCLE_TEST_REPORTS/django
    - python django_root/manage.py collectstatic --no-input

  override:
    - python django_root/manage.py test:
        environment:
          NOSE_OUTPUT_FILE: $CIRCLE_TEST_REPORTS/django/xunittest.xml
    - coverage run django_root/manage.py test --keepdb
    - coverage html --directory=$CIRCLE_ARTIFACTS

  post:
    - bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN


deployment:
  production:
    branch: master--disabled
    commands:
      - fab deploy
  staging:
    branch: release
    commands:
      - aws s3 sync /home/ubuntu/datasheetai/static s3://bigzeta.deploy/prod/deploy/datasheet.ai
  test:
    branch: develop
    commands:
      - ./add_myip_to_circleci_security_group.sh || /bin/true
      - ssh -l ec2-user -o ProxyCommand='ssh -q $BASTION nc %h %p' $DEPLOY_HOST './datasheet.ai/siteupdate.sh'
      - ./clear_circleci_security_group.sh

