# Generated by Django 2.0.5 on 2018-05-21 06:24

import datasheet.blocks
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.embeds.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0040_page_draft_title'),
        ('taggit', '0002_auto_20150616_2121'),
        ('wagtailimages', '0019_delete_filter'),
    ]

    operations = [
        migrations.CreateModel(
            name='IndexPage',
            fields=[
                ('intro', wagtail.core.fields.RichTextField(blank=True)),
                ('svglogo', models.FileField(blank=True, null=True, upload_to='')),
                ('page_ptr', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='sager_index', serialize=False, to='wagtailcore.Page')),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'verbose_name': 'Sager Index Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='RelatedLinks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('name', models.CharField(max_length=255)),
                ('url', models.URLField()),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SheetPage',
            fields=[
                ('date', models.DateField(verbose_name='Post Date')),
                ('intro', models.CharField(blank=True, max_length=250)),
                ('part_number', models.CharField(blank=True, max_length=250)),
                ('body', wagtail.core.fields.RichTextField(blank=True)),
                ('subtitle', models.CharField(blank=True, max_length=250)),
                ('main_image', models.FileField(blank=True, null=True, upload_to='')),
                ('page_ptr', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='sager_sheet', serialize=False, to='wagtailcore.Page')),
                ('sheet_blocks', wagtail.core.fields.StreamField((('grid', wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock()), ('bookmark', wagtail.core.blocks.CharBlock()), ('subtitle', wagtail.core.blocks.CharBlock(required=False)), ('json_data', datasheet.blocks.JSONTextBlock(required=False))))),), blank=True)),
                ('attributes', wagtail.core.fields.StreamField((('features', wagtail.core.blocks.StructBlock((('features', wagtail.core.blocks.ListBlock(wagtail.core.blocks.RichTextBlock(features=['bold', 'italic']))),))), ('applications', wagtail.core.blocks.StructBlock((('applications', wagtail.core.blocks.ListBlock(wagtail.core.blocks.RichTextBlock(features=['bold', 'italic']))),)))), blank=True)),
                ('carousel', wagtail.core.fields.StreamField((('embed', wagtail.core.blocks.StructBlock((('subtitle', wagtail.core.blocks.CharBlock()), ('embed', wagtail.embeds.blocks.EmbedBlock()), ('width', wagtail.core.blocks.IntegerBlock(required=False)), ('height', wagtail.core.blocks.IntegerBlock(required=False)), ('allow_fullscreen', wagtail.core.blocks.BooleanBlock(default=False))))),), blank=True)),
            ],
            options={
                'verbose_name': 'Sheet Page',
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SheetPageTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='sager_tagged_items', to='sager.SheetPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sager_sheetpagetag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='sheetpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', related_name='sager_sheetpage_tags', through='sager.SheetPageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='relatedlinks',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_links', to='sager.SheetPage'),
        ),
    ]
